{
  "active": false,
  "connections": {
    "DB Schema": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Run SQL Query": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get table definition": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-19T21:11:02.624Z",
  "id": "jrQpYxaUtJDbf9ty",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Basic SQL Agent",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "91d6476f-d04c-4386-8aa4-39daa2dea130",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1152,
        912
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "4Ihpp4lTVVLhN7Al",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get list of all tables in database",
        "operation": "executeQuery",
        "query": "SELECT table_schema, table_name\nFROM information_schema.tables\nWHERE table_type = 'BASE TABLE' AND table_schema = 'public';",
        "options": {}
      },
      "id": "03ff6d30-8cfa-4188-9862-4ea7c1b0cc65",
      "name": "DB Schema",
      "type": "n8n-nodes-base.postgresTool",
      "position": [
        1568,
        896
      ],
      "typeVersion": 2.5,
      "credentials": {
        "postgres": {
          "id": "JRAtD5GxfvOjQyf0",
          "name": "Postgres account 3"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get table definition to find all columns and types.",
        "operation": "executeQuery",
        "query": "SELECT \n    c.column_name,\n    c.data_type,\n    c.is_nullable,\n    c.column_default,\n    tc.constraint_type,\n    ccu.table_name AS referenced_table,\n    ccu.column_name AS referenced_column\nFROM \n    information_schema.columns c\nLEFT JOIN \n    information_schema.key_column_usage kcu \n    ON c.table_name = kcu.table_name \n    AND c.column_name = kcu.column_name\nLEFT JOIN \n    information_schema.table_constraints tc \n    ON kcu.constraint_name = tc.constraint_name\n    AND tc.constraint_type = 'FOREIGN KEY'\nLEFT JOIN\n    information_schema.constraint_column_usage ccu\n    ON tc.constraint_name = ccu.constraint_name\nWHERE \n    c.table_name = '{{ $fromAI(\"table_name\") }}' -- Your table name\n    AND c.table_schema = 'public' -- Ensure it's in the right schema\nORDER BY \n    c.ordinal_position;\n",
        "options": {}
      },
      "id": "b4791840-9f4a-4fe8-a982-c5849cb66234",
      "name": "Get table definition",
      "type": "n8n-nodes-base.postgresTool",
      "position": [
        1728,
        896
      ],
      "typeVersion": 2.5,
      "credentials": {
        "postgres": {
          "id": "JRAtD5GxfvOjQyf0",
          "name": "Postgres account 3"
        }
      }
    },
    {
      "parameters": {
        "agent": "openAiFunctionsAgent",
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "You are DB assistant. You need to run queries in DB aligned with user requests.\n\nRun custom SQL query to aggregate data and response to user.\n\nFetch all data to analyse it for response if needed.\n\n\n"
        }
      },
      "id": "aa434d39-06a3-4e6e-852d-cef943350673",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1328,
        640
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Run custom SQL queries using knowledge about Output structure to provide needed response for user request.\nUse ->> operator to extract JSON data.",
        "operation": "executeQuery",
        "query": "{{ $fromAI(\"query\",\"SQL query for PostgreSQL DB in Supabase\") }}",
        "options": {}
      },
      "id": "4900a62e-cf19-44e9-be90-8fe3948b0209",
      "name": "Run SQL Query",
      "type": "n8n-nodes-base.postgresTool",
      "position": [
        1424,
        896
      ],
      "typeVersion": 2.5,
      "credentials": {
        "postgres": {
          "id": "JRAtD5GxfvOjQyf0",
          "name": "Postgres account 3"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        1024,
        640
      ],
      "id": "9c85e79b-734c-4fee-891d-ca2f4992299a",
      "name": "When chat message received",
      "webhookId": "53edf6f1-546d-4a0f-825a-f85ed16771c8"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1552,
        1088
      ],
      "typeVersion": 1,
      "id": "21c594f8-160c-4e68-a77c-dcef7e91a5b4",
      "name": "Sticky Note"
    }
  ],
  "pinData": {
    "When chat message received": [
      {
        "json": {
          "sessionId": "00e28e3d9b86420b8a5f688efcf66ca5",
          "action": "sendMessage",
          "chatInput": "hello whats up?"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-19T21:11:02.630Z",
      "updatedAt": "2025-09-19T21:11:02.630Z",
      "role": "workflow:owner",
      "workflowId": "jrQpYxaUtJDbf9ty",
      "projectId": "0IzhKVOc0T9TvoCy"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-26T23:16:10.000Z",
  "versionId": "92c0fd69-5c25-4c86-9c90-702d146f88b0"
}